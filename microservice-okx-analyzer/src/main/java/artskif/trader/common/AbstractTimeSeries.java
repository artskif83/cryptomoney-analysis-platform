package artskif.trader.common;

import artskif.trader.dto.CandlestickDto;
import artskif.trader.kafka.KafkaProducer;
import artskif.trader.mapper.CandlestickMapper;
import com.fasterxml.jackson.databind.JsonNode;
import org.jboss.logging.Logger;

import java.io.IOException;
import java.nio.file.Path;
import java.time.Instant;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.StreamSupport;

public abstract class AbstractTimeSeries<C> implements BufferedPoint<C>, Logged {


    protected Instant lastBucket = null;

    protected abstract Path getPathForSave();

    protected abstract BufferRepository<C> getBufferRepository();


    protected void restoreBuffer() {
        try {
            log().infof("üì• [%s] –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–µ—á–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞", getName());
            getBuffer().restoreItems(getBufferRepository().loadCandlesFromFile(getPathForSave()));
        } catch (IOException e) {
            log().errorf("‚ùå [%s] –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ : ", getName());
        }
    }

    protected void saveBuffer() {
        try {
            log().infof("üì• [%s] –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–µ—á–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ", getName());
            getBufferRepository().saveCandlesToFile(getBuffer().getSnapshot(), getPathForSave());
        } catch (IOException e) {
            log().errorf(e, "‚ùå [%s] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ : %s", getName(), e.getMessage());
        }
    }
}
