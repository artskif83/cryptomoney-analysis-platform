spring.application.name=microservice-okx-executor
server.port=8082

# ==== App ====
app.signals-topic=dev.signals.v1
app.consumer-group=executor-bot

# Kafka broker (локальный Redpanda из docker-compose)
spring.kafka.bootstrap-servers=localhost:19092

# Группа консьюмера
spring.kafka.consumer.group-id=executor-bot

# Протобаф десериализация
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer

# Schema Registry (локальный, из compose)
spring.kafka.properties.schema.registry.url=http://localhost:8081

# Specific Protobuf message (value)
spring.kafka.properties.specific.protobuf.value.type=my.signals.v1.Signal

# Поведение консьюмера
spring.kafka.consumer.auto-offset-reset=earliest

# Не падать, если топика нет
spring.kafka.listener.missing-topics-fatal=false